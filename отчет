### Отчет о выполненном проекте

```markdown
# Отчет о проекте: Гибридная система рекомендаций книг

## Цель проекта

Целью проекта являлась разработка *гибридной системы рекомендаций книг*, объединяющей методы коллаборативной и контентной фильтрации для создания точных и персонализированных рекомендаций.

## Этапы работы

### Подготовка данных
- Объединение данных о книгах, пользовательских взаимодействиях и оценках тональности отзывов.
- Предобработка данных: преобразование категорий, авторов и других характеристик в индексы для использования в моделях.
- Расчет оценок тональности для анализа отзывов.

### Разработка моделей
#### Коллаборативная фильтрация
- Реализована модель коллаборативной фильтрации с использованием матричной факторизации в PyTorch.
- Модель обучается находить скрытые представления книг и пользователей для прогнозирования предпочтений.

#### Контентная фильтрация
- Используются метаданные книг (категории, авторы, оценки тональности) для обучения модели контентной фильтрации.
- Характеристики объединяются с помощью эмбеддингов для категорий и прямого ввода числовых данных.

#### Гибридный подход
- Сочетание сильных сторон обеих моделей:
  1. Генерация списка рекомендаций с помощью коллаборативной фильтрации.
  2. Уточнение и ранжирование списка рекомендаций на основе контентной информации.

### Реализация
- **Методы рекомендации**:
  - `get_collaborative_recommendations`: Генерация базового списка рекомендованных книг.
  - `get_content_based_recommendations`: Уточнение и сортировка рекомендаций.
- **Тестирование**:
  - Проверка качества системы на тестовых данных.
  - Сравнение результатов гибридного подхода с отдельными методами.

## Результаты
- Гибридная модель показала лучшие результаты по сравнению с отдельными методами.
- Успешно решены ключевые проблемы:
  - **Проблема холодного старта**: Контентная фильтрация позволяет рекомендовать книги даже при отсутствии данных о пользователях.
  - **Разреженность данных**: Коллаборативная фильтрация дополняет рекомендации, основываясь на взаимодействиях пользователей.

## Рекомендации для внедрения
- **Интеграция с Telegram**:
  - Система готова для использования в качестве API для Telegram-бота.
  - Пользователь может вводить название книги и получать список рекомендаций.
- **Оптимизация производительности**:
  - Реализация асинхронной обработки для повышения скорости.
  - Кэширование результатов для улучшения масштабируемости.

## Выводы
Проект демонстрирует успешность гибридного подхода, объединяющего преимущества коллаборативной и контентной фильтрации. Система надежна, точна и масштабируема, что делает её подходящей для реального применения, например, в Telegram-ботах или других платформах рекомендаций.
```
